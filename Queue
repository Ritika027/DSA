#include <iostream>
using namespace std;

class CircularQueue {
    int front, rear;
    int size;
    int* queue;

public:
    CircularQueue(int s) {
        front = rear = -1;
        size = s;
        queue = new int[size];
    }

    void enqueue(int value) {
        if ((front == 0 && rear == size - 1) || (rear == (front - 1) % (size - 1))) {
            cout << "Queue is Full\n";
            return;
        } else if (front == -1) {
            front = rear = 0;
            queue[rear] = value;
        } else if (rear == size - 1 && front != 0) {
            rear = 0;
            queue[rear] = value;
        } else {
            rear++;
            queue[rear] = value;
        }
    }

    int dequeue() {
        if (front == -1) {
            cout << "Queue is Empty\n";
            return -1;
        }

        int data = queue[front];
        queue[front] = -1;

        if (front == rear) {
            front = rear = -1;
        } else if (front == size - 1)
            front = 0;
        else
            front++;

        return data;
    }

    void displayQueue() {
        if (front == -1) {
            cout << "Queue is Empty\n";
            return;
        }
        cout << "Queue elements are: ";

        if (rear >= front) {
            for (int i = front; i <= rear; i++)
                cout << queue[i] << " ";
        } else {
            for (int i = front; i < size; i++)
                cout << queue[i] << " ";

            for (int i = 0; i <= rear; i++)
                cout << queue[i] << " ";
        }
        cout << endl;
    }

    ~CircularQueue() {
        delete[] queue;
    }
};

int main() {
    int size;
    cout << "Enter the size of the circular queue: ";
    cin >> size;

    CircularQueue q(size);

    cout << "Enter " << size << " elements to enqueue:\n";
    for (int i = 0; i < size; i++) {
        int element;
        cin >> element;
        q.enqueue(element);
    }

    q.displayQueue();

    cout << "Dequeued: " << q.dequeue() << endl;

    q.displayQueue();

    int newElement;
    cout << "Enter a new element to enqueue: ";
    cin >> newElement;
    q.enqueue(newElement);

    q.displayQueue();

    return 0;
}
